// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// generate
int generate(std::string prompt, int steps, float temperature, float topp, unsigned long long rng_seed, std::string checkpoint_path, std::string tokenizer_path);
RcppExport SEXP _llama2_r_generate(SEXP promptSEXP, SEXP stepsSEXP, SEXP temperatureSEXP, SEXP toppSEXP, SEXP rng_seedSEXP, SEXP checkpoint_pathSEXP, SEXP tokenizer_pathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type prompt(promptSEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< float >::type temperature(temperatureSEXP);
    Rcpp::traits::input_parameter< float >::type topp(toppSEXP);
    Rcpp::traits::input_parameter< unsigned long long >::type rng_seed(rng_seedSEXP);
    Rcpp::traits::input_parameter< std::string >::type checkpoint_path(checkpoint_pathSEXP);
    Rcpp::traits::input_parameter< std::string >::type tokenizer_path(tokenizer_pathSEXP);
    rcpp_result_gen = Rcpp::wrap(generate(prompt, steps, temperature, topp, rng_seed, checkpoint_path, tokenizer_path));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_llama2_r_generate", (DL_FUNC) &_llama2_r_generate, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_llama2_r(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
